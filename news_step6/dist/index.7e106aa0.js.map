{"mappings":"AAAA,MAAM,OAAO,IAAI,kBAAkB,4BAA4B;AAC/D,MAAM,YAAY;AAClB,MAAM,cAAc;AACpB,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,UAAU,SAAS,aAAa,CAAC;AACvC,MAAM,KAAK,SAAS,aAAa,CAAC,OAAO,kDAAkD;AAE3F,UAAU,CAAC;IACT,KAAK,IAAI,CAAC,OAAO,KAAK;IACtB,KAAK,IAAI,IAAI,uBAAuB;IACpC,OAAO,KAAK,KAAK,CAAC,KAAK,QAAQ;AACjC;AAEA,cAAc;IACZ,MAAM,WAAW,QAAQ;IACzB,MAAM,WAAW,EAAE;IACnB,SAAS,IAAI,CAAC;IACd,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IACtB,SAAS,IAAI,CAAC,CAAC;;kBAED,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;UACzB,EAAE,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,YAAK,EAAE,QAAQ,CAAC,EAAE,CAAC,cAAc,CAAC;;;IAG5D,CAAC;KACD,YAAY;IACd,SAAS,IAAI,CAAC;IACd,UAAU,SAAS,GAAG,SAAS,IAAI,CAAC;AACtC;AAEA,aAAa;IACX,MAAM,KAAK,SAAS,IAAI,CAAC,SAAS,CAAC;IACnC,QAAQ,GAAG,CAAC;IACZ,MAAM,WAAW,QAAQ,YAAY,OAAO,CAAC,OAAO;IACpD,UAAU,SAAS,GAAG,CAAC;QACjB,EAAE,SAAS,KAAK,CAAC;;EAEvB,CAAC;AACH;AAEA,SAAS;IACP,MAAM,aAAa,SAAS,IAAI;IAChC,eAAe;IACf,6BAA6B;IAC7B,IAAI,eAAe,IACjB,eAAe,QAAQ;SAEvB,cAAc,QAAQ;AAE1B;AAEA,UAAU;AACV,OAAO,gBAAgB,CAAC,cAAc;AACtC,UACA,qDAAqD;CACrD,iBAAiB","sources":["news_step6/index.js"],"sourcesContent":["const ajax = new XMLHttpRequest(); //브라우저가 비동기처리를 위해 제공하는 내장객체임\r\nconst TITLE_URL = 'https://api.hnpwa.com/v0/news/1.json';\r\nconst CONTENT_URL = 'https://api.hnpwa.com/v0/item/@id.json';\r\nconst container = document.getElementById('root');\r\nconst content = document.createElement('div');\r\nconst ul = document.createElement('ul'); //DOM  API가지고 태그를 만드니까 직관적이지 않다. DOM Tree그려지지 않아서.\r\n\r\ngetData = (url) => {\r\n  ajax.open('GET', url, false);\r\n  ajax.send(); //서버측에 요청 보내고 응답 기다리는 중\r\n  return JSON.parse(ajax.response);\r\n};\r\n\r\ngetNewsData = () => {\r\n  const newsData = getData(TITLE_URL);\r\n  const newsPage = [];\r\n  newsPage.push('<ul>');\r\n  for (let i = 0; i < 10; i++) {\r\n    newsPage.push(`\r\n      <li>\r\n        <a href=\"#${newsData[i].id}\">\r\n          ${newsData[i].title}, (😍${newsData[i].comments_count})\r\n        </a>\r\n      </li>\r\n    `);\r\n  } //end of for\r\n  newsPage.push('</ul>');\r\n  container.innerHTML = newsPage.join('');\r\n};\r\n\r\nnewsDetail = () => {\r\n  const id = location.hash.substring(1);\r\n  console.log(id);\r\n  const ncontent = getData(CONTENT_URL.replace('@id', id));\r\n  container.innerHTML = `\r\n    <h1>${ncontent.title}</h1>\r\n    <div><a href=\"#\">목록으로</a></div>\r\n  `;\r\n};\r\n\r\nrouter = () => {\r\n  const routerPath = location.hash;\r\n  // 타입까지 같니? ===\r\n  //#만 있으면 빈값을 반환함 -> 글목록보기로 이동\r\n  if (routerPath === '') {\r\n    getNewsData(); //글 목록보기\r\n  } else {\r\n    newsDetail(); //글 내용보기\r\n  }\r\n};\r\n\r\n//함수 호출 가능\r\nwindow.addEventListener('hashchange', router);\r\nrouter();\r\n// window.addEventListener('hashchange', newsDetail);\r\n// getNewsData();\r\n"],"names":[],"version":3,"file":"index.7e106aa0.js.map","sourceRoot":"/__parcel_source_root/"}